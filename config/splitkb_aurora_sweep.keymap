/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Layer Definitions
	#define DEFAULT	0
	#define LOWER	1
	#define RAISE	2
	#define NUMPAD	3
	#define SETTINGS 4

#define AS(keycode) &as LS(keycode) keycode     // Autoshift Macro

&mt {
  //  flavor = "tap-preferred";
   // tapping_term_ms = <200>;
};

/ {
    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            #binding-cells = <2>;
            tapping_term_ms = <135>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };

        combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };

        combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };

        combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };

       combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

		default_layer {
		bindings = <
		&kp Q			&kp W			&kp F			&kp P			&kp B					&kp J			&kp L			&kp U			&kp Y			&kp SEMICOLON
		&mt LSFT A		&mt LGUI R		&mt LALT S		&mt LCTL T		&kp G					&kp M			&mt LCTL N		&mt LALT E		&mt RGUI I		&mt RSFT O
		&kp Z			&kp X			&kp C			&kp D			&kp V					&kp K			&kp H			AS(COMMA)		AS(DOT)			AS(SLASH)
														&lt NUMPAD TAB	&lt LOWER SPACE			&mt K_APP BACKSPACE	&lt RAISE ENTER
		>;
		};

		lower_layer {
		bindings = <
		AS(N1)			AS(N2)			AS(N3)			AS(N4)			AS(N5)					AS(N6)			AS(N7)			AS(N8)			AS(N9)			AS(N0)
		&kp LEFT_BRACE	&kp RIGHT_BRACE	&kp LPRN		&kp RPRN 		&trans					&kp DOLLAR		AS(MINUS)		AS(EQUAL)		&trans			&kp SINGLE_QUOTE
		&kp ESCAPE		&kp DELETE		AS(LBKT)		AS(RBKT)		&trans					&trans			&trans			&trans			&trans			&kp BSLH
														&trans 			&trans					&trans 			&mo SETTINGS
		>;
		};

		raise_layer {
		bindings = <
		&kp F1			&kp F2			&kp F3			&kp F4			&trans					&kp C_VOLUME_UP	&trans 			&trans 			&trans			&trans
		&kp F5			&kp F6			&kp F7			&kp F8			&trans					&mt C_PLAY_PAUSE C_PLAY	&kp LEFT	&kp DOWN	&kp UP			&kp RIGHT
		&kp F9			&kp F10			&kp F11			&kp F12			&trans	 				&kp C_VOLUME_DOWN	&trans		&trans			&trans			&trans
														&kp DELETE		&trans					&trans			&trans
		>;
		};

		numpad_layer {
		bindings = <
		&trans			&kp PSCRN		&kp	SCROLLLOCK	&kp PAUSE_BREAK	&kp KP_NUM				&kp KP_MINUS	&kp KP_N7		&kp KP_N8		&kp KP_N9		&kp KP_SLASH
		&trans			&kp INSERT		&kp HOME		&kp PGUP		&trans					&kp PLUS		&kp KP_N4		&kp KP_N5		&kp KP_N6		&kp KP_ASTERISK
		&trans			&kp DELETE		&kp END			&kp PGDN		&trans					&kp KP_DOT		&kp KP_N1		&kp KP_N2		&kp KP_N3		&kp KP_ENTER
														&trans			&trans					&trans 			&kp KP_N0
		>;
		};

		settings_layer {
		bindings = <
		&bt BT_SEL 1	&bt BT_SEL 2	&bt BT_SEL 3	&bt BT_SEL 4	&none					&none			&none			&none			&none			&none
		&none			&none			&none			&none			&bootloader				&bootloader		&none			&none			&none			&none
		&bt BT_PRV		&bt BT_CLR		&none 			&bt BT_NXT		&reset					&reset			&none			&none			&none			&none
														&trans			&trans					&trans			&trans
		>;
		};
	};
};